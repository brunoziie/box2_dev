{
    "project": {
        "name": "Box2 Framework",
        "description": "Javascript MVC Framework for Android PhoneGap",
        "version": "0.2b",
        "url": "http://yuilibrary.com/"
    },
    "files": {
        "box2.ajax.js": {
            "name": "box2.ajax.js",
            "modules": {},
            "classes": {
                "Box2.Ajax": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.configs.js": {
            "name": "box2.configs.js",
            "modules": {},
            "classes": {
                "Box2.Configs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.controller.js": {
            "name": "box2.controller.js",
            "modules": {},
            "classes": {
                "Box2.Controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.datasource.sqlite.js": {
            "name": "box2.datasource.sqlite.js",
            "modules": {},
            "classes": {
                "Box2.Datasource.SQLite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.device.js": {
            "name": "box2.device.js",
            "modules": {},
            "classes": {
                "Box2.Device": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.forms.js": {
            "name": "box2.forms.js",
            "modules": {},
            "classes": {
                "Box2.Forms": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.history.js": {
            "name": "box2.history.js",
            "modules": {},
            "classes": {
                "Box2.History": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.htmlentities.js": {
            "name": "box2.htmlentities.js",
            "modules": {},
            "classes": {
                "Box2.HTMLEntities": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.inflector.js": {
            "name": "box2.inflector.js",
            "modules": {},
            "classes": {
                "Box2.Inflector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.js": {
            "name": "box2.js",
            "modules": {},
            "classes": {
                "Box2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.loader.js": {
            "name": "box2.loader.js",
            "modules": {},
            "classes": {
                "Box2.Loader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.mapper.js": {
            "name": "box2.mapper.js",
            "modules": {},
            "classes": {
                "Box2.Mapper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.model.js": {
            "name": "box2.model.js",
            "modules": {},
            "classes": {
                "Box2.Model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "box2.view.js": {
            "name": "box2.view.js",
            "modules": {},
            "classes": {
                "Box2.View": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Box2.Ajax": {
            "name": "Box2.Ajax",
            "shortname": "Box2.Ajax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.ajax.js",
            "line": 1,
            "description": "AJAX utils",
            "is_constructor": 1,
            "params": [
                {
                    "name": "async",
                    "description": "True if will to use async request",
                    "type": "Boolean"
                }
            ]
        },
        "Box2.Configs": {
            "name": "Box2.Configs",
            "shortname": "Box2.Configs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.configs.js",
            "line": 1,
            "description": "Controll application's configs",
            "static": 1
        },
        "Box2.Controller": {
            "name": "Box2.Controller",
            "shortname": "Box2.Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.controller.js",
            "line": 1,
            "description": "Controller",
            "is_constructor": 1
        },
        "Box2.Datasource.SQLite": {
            "name": "Box2.Datasource.SQLite",
            "shortname": "Box2.Datasource.SQLite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.datasource.sqlite.js",
            "line": 1,
            "description": "Sqlite local storage",
            "static": 1
        },
        "Box2.Device": {
            "name": "Box2.Device",
            "shortname": "Box2.Device",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.device.js",
            "line": 1,
            "description": "Device utils",
            "is_constructor": 1
        },
        "Box2.Forms": {
            "name": "Box2.Forms",
            "shortname": "Box2.Forms",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.forms.js",
            "line": 1,
            "description": "Forms utils",
            "static": 1
        },
        "Box2.History": {
            "name": "Box2.History",
            "shortname": "Box2.History",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.history.js",
            "line": 1,
            "description": "Controll application navigation history",
            "static": 1
        },
        "Box2.HTMLEntities": {
            "name": "Box2.HTMLEntities",
            "shortname": "Box2.HTMLEntities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.htmlentities.js",
            "line": 1,
            "description": "HTML Entities utils",
            "static": 1
        },
        "Box2.Inflector": {
            "name": "Box2.Inflector",
            "shortname": "Box2.Inflector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.inflector.js",
            "line": 1,
            "description": "Text formater utils",
            "static": 1
        },
        "Box2": {
            "name": "Box2",
            "shortname": "Box2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.js",
            "line": 7,
            "description": "Framework Core",
            "static": 1
        },
        "Box2.Loader": {
            "name": "Box2.Loader",
            "shortname": "Box2.Loader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.loader.js",
            "line": 1,
            "description": "Load application's script files",
            "static": 1
        },
        "Box2.Mapper": {
            "name": "Box2.Mapper",
            "shortname": "Box2.Mapper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.mapper.js",
            "line": 1,
            "description": "Mapper class",
            "static": 1
        },
        "Box2.Model": {
            "name": "Box2.Model",
            "shortname": "Box2.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.model.js",
            "line": 1,
            "description": "Model",
            "is_constructor": 1
        },
        "Box2.View": {
            "name": "Box2.View",
            "shortname": "Box2.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "box2.view.js",
            "line": 1,
            "description": "View",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "box2.ajax.js",
            "line": 12,
            "description": "Storage XMLHttpRequest object",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "link",
            "type": "Object",
            "class": "Box2.Ajax"
        },
        {
            "file": "box2.ajax.js",
            "line": 20,
            "description": "Set if the request will to be async",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "async",
            "type": "Boolean",
            "class": "Box2.Ajax"
        },
        {
            "file": "box2.ajax.js",
            "line": 35,
            "description": "Send a HTTP request",
            "itemtype": "method",
            "name": "request",
            "params": [
                {
                    "name": "url",
                    "description": "Url to send the request",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "Method of the request <POST|GET>",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Result of the request or a empty string if to happen some error",
                "type": "String"
            },
            "class": "Box2.Ajax"
        },
        {
            "file": "box2.ajax.js",
            "line": 61,
            "description": "Mount a querystring from a object",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "__parseParams",
            "params": [
                {
                    "name": "params",
                    "description": "List of params",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Querystring with the params",
                "type": "String"
            },
            "class": "Box2.Ajax"
        },
        {
            "file": "box2.configs.js",
            "line": 16,
            "description": "Storage configs",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "",
            "type": "{Object}",
            "class": "Box2.Configs"
        },
        {
            "file": "box2.configs.js",
            "line": 24,
            "description": "Save a config",
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "key",
                    "description": "Key name of config",
                    "type": "Strinh"
                },
                {
                    "name": "value",
                    "description": "Value for the config",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Configs"
        },
        {
            "file": "box2.configs.js",
            "line": 36,
            "description": "Read a saved config",
            "itemtype": "method",
            "name": "read",
            "params": [
                {
                    "name": "key",
                    "description": "Key name of config",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Config value",
                "type": "Mixed"
            },
            "class": "Box2.Configs"
        },
        {
            "file": "box2.controller.js",
            "line": 10,
            "description": "Models that will to be used by controller.",
            "itemtype": "attribute",
            "name": "uses",
            "type": "Array",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 17,
            "description": "Default layout",
            "itemtype": "attribute",
            "name": "layout",
            "type": "String",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 24,
            "description": "Helpers that will to be used by controller",
            "itemtype": "attribute",
            "name": "helpers",
            "type": "Object",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 31,
            "description": "Data received via form post",
            "itemtype": "attribute",
            "name": "data",
            "type": "Object",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 38,
            "description": "Controller params",
            "itemtype": "attribute",
            "name": "params",
            "type": "Object",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 45,
            "description": "Output generated by view's render",
            "itemtype": "attribute",
            "name": "output",
            "type": "{String}",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 52,
            "description": "Variables for the views",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "vars",
            "type": "{Object}",
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 69,
            "description": "Set a variable for the view",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "key",
                    "description": "Variable name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value to variable",
                    "type": "Mixed"
                }
            ],
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 80,
            "description": "Get a variable from Controller.vars",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "Object key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 91,
            "description": "Clear the views vars",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "void"
            },
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 101,
            "description": "Redirect to page into application",
            "itemtype": "method",
            "name": "redirect",
            "params": [
                {
                    "name": "url",
                    "description": "Destination to redirect",
                    "type": "String"
                }
            ],
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 112,
            "description": "Render a view and put to output attribute",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "path",
                    "description": "View parh",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Controller"
        },
        {
            "file": "box2.controller.js",
            "line": 127,
            "description": "Show the rendered views",
            "itemtype": "method",
            "name": "renderView",
            "return": {
                "description": "void"
            },
            "class": "Box2.Controller"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 11,
            "description": "Database instance",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "",
            "type": "{Object}",
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 19,
            "description": "Get instance from SQLite database",
            "itemtype": "method",
            "name": "getInstance",
            "return": {
                "description": "Instance object",
                "type": "Object"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 33,
            "description": "Converts conditions to sql format",
            "itemtype": "method",
            "name": "parseConditions",
            "params": [
                {
                    "name": "conditions",
                    "description": "Conditions list",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Conditions list in sql format",
                "type": "Strinh"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 75,
            "description": "Converts fields list to sql format",
            "itemtype": "method",
            "name": "parseFields",
            "params": [
                {
                    "name": "fields",
                    "description": "Fields list",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Fields list in sql format",
                "type": "String"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 98,
            "description": "Run a query",
            "itemtype": "method",
            "name": "query",
            "params": [
                {
                    "name": "query",
                    "description": "Query for run",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 117,
            "description": "Run many queries",
            "itemtype": "method",
            "name": "multiQuery",
            "params": [
                {
                    "name": "functionsLote",
                    "description": "Function with the queries",
                    "type": "Function"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 133,
            "description": "Parse params and run a query",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "model",
                    "description": "Model from table",
                    "type": "Object"
                },
                {
                    "name": "params",
                    "description": "Params for the query",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 187,
            "description": "Convert query results in a associative array",
            "itemtype": "method",
            "name": "fetchArray",
            "params": [
                {
                    "name": "queryResult",
                    "description": "Query result",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Associative array",
                "type": "Array"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 208,
            "description": "Insert a new entry into database",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "model",
                    "description": "Model from table",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Object at format key:value, with the fields and values to save into table",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 250,
            "description": "Update one or many entry into database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "model",
                    "description": "Model from table",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Object at format key:value, with the fields and values to update into table",
                    "type": "Object"
                },
                {
                    "name": "conditions",
                    "description": "Conditions to update",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.datasource.sqlite.js",
            "line": 292,
            "description": "Delete entries from database",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "model",
                    "description": "Model from table",
                    "type": "Object"
                },
                {
                    "name": "params",
                    "description": "Params for the query",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Datasource.SQLite"
        },
        {
            "file": "box2.device.js",
            "line": 11,
            "description": "Device screen height",
            "itemtype": "attribute",
            "name": "height",
            "access": "private",
            "tagname": "",
            "type": "Integer",
            "class": "Box2.Device"
        },
        {
            "file": "box2.device.js",
            "line": 20,
            "description": "Device screen width",
            "itemtype": "attribute",
            "name": "width",
            "access": "private",
            "tagname": "",
            "type": "Integer",
            "class": "Box2.Device"
        },
        {
            "file": "box2.device.js",
            "line": 29,
            "description": "App heigth ( without status bar )",
            "itemtype": "attribute",
            "name": "innerHeight",
            "access": "private",
            "tagname": "",
            "type": "Integer",
            "class": "Box2.Device"
        },
        {
            "file": "box2.device.js",
            "line": 38,
            "description": "App width ( without status bar )",
            "itemtype": "attribute",
            "name": "innerWidth",
            "access": "private",
            "tagname": "",
            "type": "Integer",
            "class": "Box2.Device"
        },
        {
            "file": "box2.device.js",
            "line": 56,
            "description": "Get sizes",
            "itemtype": "method",
            "name": "getSize",
            "params": [
                {
                    "name": "type",
                    "description": "Size for returns ( height, width, innerWidth or innerHeight )",
                    "type": "String"
                }
            ],
            "return": {
                "description": "False if given an invalid type, Integer if is alright",
                "type": "Mixed"
            },
            "class": "Box2.Device"
        },
        {
            "file": "box2.forms.js",
            "line": 10,
            "description": "Storage posted data",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "postData",
            "class": "Box2.Forms"
        },
        {
            "file": "box2.forms.js",
            "line": 18,
            "description": "Get saved post data",
            "itemtype": "method",
            "name": "getPostData",
            "return": {
                "description": "Post data",
                "type": "Object"
            },
            "class": "Box2.Forms"
        },
        {
            "file": "box2.forms.js",
            "line": 28,
            "description": "Set post data",
            "itemtype": "method",
            "name": "setPostData",
            "params": [
                {
                    "name": "data",
                    "description": "Data to set",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Forms"
        },
        {
            "file": "box2.forms.js",
            "line": 39,
            "description": "Clean saved post data",
            "itemtype": "method",
            "name": "resetPostData",
            "return": {
                "description": "void"
            },
            "class": "Box2.Forms"
        },
        {
            "file": "box2.forms.js",
            "line": 55,
            "description": "Apply event to new form inserted into DOM",
            "itemtype": "method",
            "name": "__bind",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "void"
            },
            "class": "Box2.Forms"
        },
        {
            "file": "box2.forms.js",
            "line": 73,
            "description": "Serialize form data",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "form",
                    "description": "Form for serialize inputs data",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Serialized form data",
                "type": "Object"
            },
            "class": "Box2.Forms"
        },
        {
            "file": "box2.forms.js",
            "line": 146,
            "description": "Parse a form submit and if the target is a internal page of the applications\nserialize form data and call the controller",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "form",
                    "description": "Form that called submit event",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "True if sucess",
                "type": "Boolean"
            },
            "class": "Box2.Forms"
        },
        {
            "file": "box2.history.js",
            "line": 11,
            "description": "Storage the history",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "historyList",
            "type": "Array",
            "class": "Box2.History"
        },
        {
            "file": "box2.history.js",
            "line": 24,
            "description": "Add a path to history",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "string",
                    "description": "Path for save",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.History"
        },
        {
            "file": "box2.history.js",
            "line": 41,
            "description": "Remove last history path",
            "itemtype": "method",
            "name": "removeLast",
            "return": {
                "description": "void"
            },
            "class": "Box2.History"
        },
        {
            "file": "box2.history.js",
            "line": 52,
            "description": "Get current path",
            "itemtype": "method",
            "name": "current",
            "return": {
                "description": "Current path",
                "type": "String"
            },
            "class": "Box2.History"
        },
        {
            "file": "box2.history.js",
            "line": 69,
            "description": "Get previous path",
            "itemtype": "method",
            "name": "prev",
            "return": {
                "description": "Previous path",
                "type": "String"
            },
            "class": "Box2.History"
        },
        {
            "file": "box2.history.js",
            "line": 86,
            "description": "Get length of history array",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "History length",
                "type": "Integer"
            },
            "class": "Box2.History"
        },
        {
            "file": "box2.history.js",
            "line": 96,
            "description": "Clear the history",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "void"
            },
            "class": "Box2.History"
        },
        {
            "file": "box2.htmlentities.js",
            "line": 9,
            "description": "Encode a string for HTML Entities",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "string",
                    "description": "String for encode",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Encoded string",
                "type": "String"
            },
            "class": "Box2.HTMLEntities"
        },
        {
            "file": "box2.htmlentities.js",
            "line": 58,
            "description": "Decode a string with HTML entities",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "string",
                    "description": "String for decode",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Decoded string",
                "type": "String"
            },
            "class": "Box2.HTMLEntities"
        },
        {
            "file": "box2.inflector.js",
            "line": 10,
            "description": "Translation table",
            "itemtype": "attribute",
            "name": "",
            "access": "private",
            "tagname": "",
            "type": "Array",
            "class": "Box2.Inflector"
        },
        {
            "file": "box2.inflector.js",
            "line": 36,
            "description": "First character to uppercase",
            "itemtype": "method",
            "name": "capitalize",
            "params": [
                {
                    "name": "string",
                    "description": "String for change",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Box2.Inflector"
        },
        {
            "file": "box2.inflector.js",
            "line": 48,
            "description": "Remove special chars and replace spaces by underscore",
            "itemtype": "method",
            "name": "slug",
            "params": [
                {
                    "name": "string",
                    "description": "String for change",
                    "type": "String"
                },
                {
                    "name": "replacement",
                    "description": "Character for replace spaces",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Box2.Inflector"
        },
        {
            "file": "box2.inflector.js",
            "line": 69,
            "description": "Converts CamelCase to string separated by underscore",
            "itemtype": "method",
            "name": "humanize",
            "params": [
                {
                    "name": "string",
                    "description": "String for change",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Modified string",
                "type": "String"
            },
            "class": "Box2.Inflector"
        },
        {
            "file": "box2.js",
            "line": 29,
            "description": "Initialize de application",
            "itemtype": "method",
            "name": "bootUp",
            "return": {
                "description": "void"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 83,
            "description": "Implements a extends utils",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "obj",
                    "description": "Object that will to be extended",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "New object implementation",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "New object",
                "type": "Object"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 98,
            "description": "Merge two objects",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "a",
                    "description": "First Object",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "Second Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Merge of the two objects",
                "type": "Object"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 124,
            "description": "Get length of a object",
            "itemtype": "method",
            "name": "objlen",
            "params": [
                {
                    "name": "obj",
                    "description": "Object that you want get the length",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Length of the object",
                "type": "Number"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 144,
            "description": "Destroy a reference from a object",
            "itemtype": "method",
            "name": "getObject",
            "params": [
                {
                    "name": "obj",
                    "description": "Object that you want to get without parent reference",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New object without the parent reference",
                "type": "Object"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 158,
            "description": "Add slashes to a string",
            "itemtype": "method",
            "name": "addSlashes",
            "params": [
                {
                    "name": "str",
                    "description": "String for escape",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Escaped string",
                "type": "String"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 170,
            "description": "Remove slashes from a string",
            "itemtype": "method",
            "name": "stripSlashes",
            "params": [
                {
                    "name": "str",
                    "description": "String that contains slashes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String without slashes",
                "type": "String"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 193,
            "description": "Implements namespacing",
            "itemtype": "method",
            "name": "namespace",
            "params": [
                {
                    "name": "path",
                    "description": "Namespacing path",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2"
        },
        {
            "file": "box2.js",
            "line": 214,
            "description": "Includes Javascript or CSS files into the DOM",
            "itemtype": "method",
            "name": "include",
            "params": [
                {
                    "name": "filenames",
                    "description": "String or Array with the filenames",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2"
        },
        {
            "file": "box2.loader.js",
            "line": 11,
            "description": "HTTP request object",
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "http",
            "type": "Object",
            "class": "Box2.Loader"
        },
        {
            "file": "box2.loader.js",
            "line": 26,
            "description": "Load/start a controller",
            "itemtype": "method",
            "name": "controller",
            "params": [
                {
                    "name": "data",
                    "description": "Controller's informations",
                    "type": "Object"
                },
                {
                    "name": "formData",
                    "description": "Form post data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Loader"
        },
        {
            "file": "box2.loader.js",
            "line": 70,
            "description": "Load a model file",
            "itemtype": "method",
            "name": "model",
            "params": [
                {
                    "name": "name",
                    "description": "Model name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Loader"
        },
        {
            "file": "box2.loader.js",
            "line": 94,
            "description": "Load a view file",
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "name",
                    "description": "View path",
                    "type": "String"
                }
            ],
            "return": {
                "description": "View html content",
                "type": "String"
            },
            "class": "Box2.Loader"
        },
        {
            "file": "box2.loader.js",
            "line": 112,
            "description": "Load a layout file",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "name",
                    "description": "Layout path",
                    "type": "String"
                },
                {
                    "name": "outputContent",
                    "description": "Rendered output view content",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Layout html content",
                "type": "String"
            },
            "class": "Box2.Loader"
        },
        {
            "file": "box2.loader.js",
            "line": 131,
            "description": "Load files by yours type",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "loadScript",
            "params": [
                {
                    "name": "name",
                    "description": "File name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "File script type (model, view, controller, helper, layout)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String found the file, False if not",
                "type": "Mixed"
            },
            "class": "Box2.Loader"
        },
        {
            "file": "box2.mapper.js",
            "line": 15,
            "description": "Parse a given URL and returns a object with your controller, action and arguments",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "href",
                    "description": "URL for parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Object with controller, action and arguments",
                "type": "Object"
            },
            "class": "Box2.Mapper"
        },
        {
            "file": "box2.model.js",
            "line": 9,
            "description": "Database connection instance",
            "itemtype": "attribute",
            "name": "dbInstance",
            "type": "Object",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 16,
            "description": "Model's table",
            "itemtype": "attribute",
            "name": "table",
            "type": "String",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 23,
            "description": "Default order",
            "itemtype": "attribute",
            "name": "order",
            "type": "String",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 30,
            "description": "Primary key name",
            "itemtype": "attribute",
            "name": "primaryKey",
            "type": "String",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 37,
            "description": "Fields for return in the query",
            "itemtype": "attribute",
            "name": "fields",
            "type": "Array",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 44,
            "description": "Default results limit",
            "itemtype": "attribute",
            "name": "limit",
            "type": "Number",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 51,
            "description": "Default query's conditions",
            "itemtype": "attribute",
            "name": "conditions",
            "type": "Object",
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 64,
            "description": "Run a query",
            "itemtype": "method",
            "name": "query",
            "params": [
                {
                    "name": "query",
                    "description": "Query to be runed",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 92,
            "description": "Parse params and run a query",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "params",
                    "description": "Params for the query",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 108,
            "description": "Get all register from a table",
            "itemtype": "method",
            "name": "all",
            "params": [
                {
                    "name": "params",
                    "description": "Params for the query",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 121,
            "description": "Get first register from a query",
            "itemtype": "method",
            "name": "first",
            "params": [
                {
                    "name": "params",
                    "description": "Params for the query",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 136,
            "description": "Find a row by primary key",
            "itemtype": "method",
            "name": "firstById",
            "params": [
                {
                    "name": "id",
                    "description": "Primary key id",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 154,
            "description": "Save data into the table. \nOBS: If found a field with same name that the primary key this data will \nto be updated. If you wanna to create a new entry maybe you should to use the method insert.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "data",
                    "description": "Object at format key:value, with the fields and values to save into table",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 185,
            "description": "Insert a new entry into database",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "data",
                    "description": "Object at format key:value, with the fields and values to save into table",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 201,
            "description": "Update method abstration",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "Object at format key:value, with the fields and values to update into table",
                    "type": "Object"
                },
                {
                    "name": "conditions",
                    "description": "Conditions to update",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "{Function} Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 218,
            "description": "Delete a entry by primary key",
            "itemtype": "method",
            "name": "deleteById",
            "params": [
                {
                    "name": "id",
                    "description": "Primary key value",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.model.js",
            "line": 242,
            "description": "Delete all entry by a condition",
            "itemtype": "method",
            "name": "deleteAll",
            "params": [
                {
                    "name": "params",
                    "description": "Params for the query",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Sucess callback",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "Box2.Model"
        },
        {
            "file": "box2.view.js",
            "line": 9,
            "description": "Layout used by this view",
            "itemtype": "attribute",
            "name": "",
            "type": "{String}",
            "class": "Box2.View"
        },
        {
            "file": "box2.view.js",
            "line": 17,
            "description": "Render a view",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "path",
                    "description": "View path",
                    "type": "String"
                },
                {
                    "name": "vars",
                    "description": "Object with variables for the view",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Rendered view's content",
                "type": "String"
            },
            "class": "Box2.View"
        },
        {
            "file": "box2.view.js",
            "line": 30,
            "description": "Render a layout",
            "itemtype": "method",
            "name": "renderLayout",
            "params": [
                {
                    "name": "viewsContent",
                    "description": "Rendered content from the views",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Object with variables for the layout",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Rendered layout",
                "type": "String"
            },
            "class": "Box2.View"
        }
    ]
}